% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_maintenance_functions.R
\name{export_schema_to_data_repo}
\alias{export_schema_to_data_repo}
\alias{export_schema}
\title{Export and Push a skyscraper Schema to its Data Package Repository}
\usage{
export_schema_to_data_repo(
  conn,
  schema,
  commit_message = "automated export",
  target_dir,
  force_install = FALSE,
  reset = TRUE
)

export_schema(conn, schema, commit_message = "automated export", target_dir)
}
\arguments{
\item{conn}{Postgres connection for \code{schema} argument}

\item{schema}{Schema to export}

\item{target_dir}{Path to the local repo where the schema data will be exported to. If it does not already exist locally, it should be cloned beforehand.}
}
\description{
Local maintenance functions are meant to be used to export and instantiate/update a local skyscraper schema with the Data Package Repo. This is important for keeping data updated on one machine when there have been additions made to the Remote Data Package Repository.
}
\details{
This function exports and binds the csvs of the repository data and the local database data as opposed to the imported package data.
}
\section{Exporting Schemas}{

Exporting schemas requires having a local clone of its Data Package Repository. The tables for the given schema are written to csvs in the "data-raw/", along with a refresh of DATASET.R where the usethis::use_raw_data() function is called. The R/data.R is also rewritten with updates on the dataframe dimensions. The updated local repo is then repackaged and pushed to the remote.


Exporting schemas requires having a local clone of its Data Package Repository. The tables for the given schema are written to csvs in the "data-raw/", along with a refresh of DATASET.R where the usethis::use_raw_data() function is called. The R/data.R is also rewritten with updates on the dataframe dimensions. The updated local repo is then repackaged and pushed to the remote.
}

\seealso{
\code{\link[cave]{create_dir_if_not_exist}}
\code{\link[chariot]{connectAthena}},\code{\link[chariot]{dcAthena}}
\code{\link[pg13]{lsTables}},\code{\link[pg13]{readTable}}
\code{\link[rubix]{map_names_set}}
\code{\link[purrr]{map2}},\code{\link[purrr]{map}}
\code{\link[broca]{simply_write_csv}}
\code{\link[readr]{read_lines}}
\code{\link[sinew]{makeOxygen}}
\code{\link[stringr]{str_replace}}
\code{\link[glitter]{docPushInstall}}

\code{\link[cave]{create_dir_if_not_exist}}
\code{\link[chariot]{connectAthena}},\code{\link[chariot]{dcAthena}}
\code{\link[pg13]{lsTables}},\code{\link[pg13]{readTable}}
\code{\link[rubix]{map_names_set}}
\code{\link[purrr]{map2}},\code{\link[purrr]{map}}
\code{\link[broca]{simply_write_csv}}
\code{\link[readr]{read_lines}}
\code{\link[sinew]{makeOxygen}}
\code{\link[stringr]{str_replace}}
\code{\link[glitter]{docPushInstall}}

Other local maintenance: 
\code{\link{import_schemas}()},
\code{\link{load_schema_map}()},
\code{\link{schema_status}()}

Other local maintenance: 
\code{\link{import_schemas}()},
\code{\link{load_schema_map}()},
\code{\link{schema_status}()}
}
\concept{local maintenance}

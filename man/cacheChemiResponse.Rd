% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getRN.R, R/get_rn_url_validity.R,
%   R/log_registry_number.R
\name{getRN}
\alias{getRN}
\alias{get_rn_url_validity}
\alias{log_registry_number}
\title{Cache a ChemiDPlus API Call Response}
\usage{
getRN(conn, input, type = "contains", sleep_secs = 3)

get_rn_url_validity(conn, rn_url, sleep_time = 3)

log_registry_number(conn, raw_concept, type = "contains", sleep_time = 3)
}
\arguments{
\item{conn}{(optional) Connection to a Postgres Database.}

\item{type}{type of search to conduct; Default: 'contains'}

\item{sleep_secs}{Applicable to loops. If a response cached returns NULL, system sleep time in seconds after the url is read. PARAM_DESCRIPTION, Default: 0}

\item{sleep_time}{Applicable to loops. If a response cached returns NULL, system sleep time in seconds after the url is read. PARAM_DESCRIPTION, Default: 0}

\item{raw_concept}{Raw concept to search}

\item{phrase}{phrase to search}
}
\value{
If a connection is not provided, a dataframe of 1 row with the timestamp, phrase, type, url, whether a response was received at the time of the timestamp, and if the response is cached.

If a connection is not provided, a dataframe of 1 row with the timestamp, processed_concept, type, url, whether a response was received at the time of the timestamp, and if the response is cached.

If a connection is not provided, a dataframe of 1 row with the timestamp, processed_concept, type, url, whether a response was received at the time of the timestamp, and if the response is cached.
}
\description{
Cache the response to an API call to "https://chem.nlm.nih.gov/chemidplus/name/", type, "/",  phrase" if it already has not been done so or if it has been, but the response returned NULL to retry querying. If a connection to a Postgres database is provided, the timestamp, phrase, type, url, whether a response was received at the time of the timestamp, and if the response is cached. Response Received field is NA if a cached object with the url as the key. If a connection to a Postgres database is provided, the dataframe is written to a `PHRASE_LOG` table in a `chemidplus` schema.

Cache the response to an API call to "https://chem.nlm.nih.gov/chemidplus/name/", type, "/",  processed_concept" if it already has not been done so or if it has been, but the response returned NULL to retry querying. If a connection to a Postgres database is provided, the timestamp, processed_concept, type, url, whether a response was received at the time of the timestamp, and if the response is cached. Response Received field is NA if a cached object with the url as the key. If a connection to a Postgres database is provided, the dataframe is written to a `PHRASE_LOG` table in a `chemidplus` schema.

Cache the response to an API call to "https://chem.nlm.nih.gov/chemidplus/name/", type, "/",  processed_concept" if it already has not been done so or if it has been, but the response returned NULL to retry querying. If a connection to a Postgres database is provided, the timestamp, processed_concept, type, url, whether a response was received at the time of the timestamp, and if the response is cached. Response Received field is NA if a cached object with the url as the key. If a connection to a Postgres database is provided, the dataframe is written to a `PHRASE_LOG` table in a `chemidplus` schema.
}
\seealso{
\code{\link[tibble]{tibble}}
 \code{\link[dplyr]{mutate}}
 \code{\link[stringr]{str_remove}}
 \code{\link[xml2]{read_xml}}
 \code{\link[pg13]{lsSchema}},\code{\link[pg13]{createSchema}},\code{\link[pg13]{lsTables}},\code{\link[pg13]{appendTable}},\code{\link[pg13]{writeTable}}

\code{\link[tibble]{tibble}}
 \code{\link[dplyr]{mutate}}
 \code{\link[stringr]{str_remove}}
 \code{\link[xml2]{read_xml}}
 \code{\link[pg13]{lsSchema}},\code{\link[pg13]{createSchema}},\code{\link[pg13]{lsTables}},\code{\link[pg13]{appendTable}},\code{\link[pg13]{writeTable}}

\code{\link[tibble]{tibble}}
 \code{\link[dplyr]{mutate}}
 \code{\link[stringr]{str_remove}}
 \code{\link[xml2]{read_xml}}
 \code{\link[pg13]{lsSchema}},\code{\link[pg13]{createSchema}},\code{\link[pg13]{lsTables}},\code{\link[pg13]{appendTable}},\code{\link[pg13]{writeTable}}
}
